name: Flask-app workflow

on: [push]
# on:
#   schedule:
#     - cron: '25 5 * * *'
#     - cron: '35 5 * * *'
#     - cron: '0 6 * * *'
#     - cron: '0 7 * * *'
#     - cron: '25 8 * * *'

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Lint with flake8
      run: flake8 .

    - name: Test with pytest
      run: pytest tests.py 

  build_and_push_to_docker_hub:  # название конкретной задачи
    name: Push Docker image to Docker Hub  # описание задачи
    runs-on: ubuntu-latest  # настройка окружения для выполнения jobs
    needs: tests # после выполнения какой задачи запускать эту задачу
    steps: # последовательность действий внутри шага
      - name: Check out the repo
        uses: actions/checkout@v2 #  заранее подготовленные скрипты
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: stasyao/flask-app:latest

  deploy: # название конкретной задачи
    runs-on: ubuntu-latest # в каком окружении будет выполняться задача
    needs: build_and_push_to_docker_hub # после какой задачи будет выполняться
    steps:
      - name: executing remote ssh commands to deploy
        # готовый экшн
        # https://github.com/appleboy/ssh-action
        # GitHub Action for executing remote ssh commands
        uses: appleboy/ssh-action@master 
        with:
          # имя компьютера, к которому подключаемся
          host: ${{ secrets.HOST }}
          # имя пользователя
          username: ${{ secrets.USER }}
          # приватный ssh-ключ
          key: ${{ secrets.SSH_KEY }}
          # пароль для доступа к приватному ключу
          passphrase: ${{ secrets.PASSPHRASE }}
          # какие команды нужно выполнить, после захода на сервер
          script: |
            sudo docker pull stasyao/flask-app
            sudo docker run --rm -d -p 5000:5000 stasyao/flask-app

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
